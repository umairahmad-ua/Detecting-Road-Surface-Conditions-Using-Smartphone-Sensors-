# -*- coding: utf-8 -*-
"""21i-2081 Project of SMTD.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z-RPyPnr8NOvQKOzL03VWAX4jLf2q_mW

# **Umair Ahmad** 
# **21i-2081**

This is an R Markdown Notebook. When you execute code within the notebook, the results appear beneath the code.

Try executing this chunk by clicking the Run button within the chunk or by placing your cursor inside it and pressing Ctrl+Shift+Enter.

# **DS-5003/2003 Statistical and Mathematical tools for Data Science (Fall 2021)**
We are required to break our analysis  into descriptive statistics to construct the answer.
Road detection is of important part for the traveling comfort
and driving safety.
The data collected by smartphone sensors to detect road conditions in
real-time.

Global Positioning System (GPS)

Accelerometer (x, y, z-axis values)

Gyroscope (x, y, z-axis values)

Overall travel distance can be obtained using GPS sensor.

Accelerometers in smartphones are used to detect the
orientation of the phone (vertical displacement).

The gyroscope adds an additional dimension to the information
supplied by the accelerometer by tracking rotation or twist.

# **Problem Statment**

**Question 1:** Accelerometer sensor when reading augmented with Gyro sensor data has a better chance of detecting the road condition.?

**Question 2:** Which accelerometer readings better explain the road conditions?

**Question 3:** Experimental data is showing mostly bad road conditions at high speed. Verify this
claim?


**Question 4.** Time of the recording is closely correlated with the road condition?

**Question 5:** From all the given sensor values pick the best 5 that you think predict the road
condition the best?

# **Importing Libraries**
"""

library('MASS')
install.packages("caret")
library('caret')

library('ggplot2') # visualization
install.packages("ggthemes")
library('ggthemes') # visualization
library('scales') # visualization
library('plyr'); library('dplyr')
library('tidyr') # data manipulation
install.packages("gridExtra")
library('gridExtra')
install.packages("corrplot")
library('corrplot')

library('stringr')
library('data.table')
install.packages("zoo")
library('zoo')
install.packages("cowplot")
library(cowplot)
install.packages("gginference")
library(gginference)
set.seed(2017)
select <- dplyr::select
options(digits.secs=6)

"""# Data Reading for Analysis using R Function "fread.csv" """

#Data Reading
#Load Data
df <- fread('/content/TrainingData.csv', stringsAsFactors=TRUE)

"""# Getting some Trends from different Sensors"""

head(df)

str(df)

summary(df)

"""# **Question 1**
**Accelerometer sensor when reading augmented with Gyro sensor data has a better
chance of detecting the road condition.**

In this question we have to check whether Accelerometer sensor readings alone produce good results for detecting road condtion or it perform better when Augment with Gyro sensors.

# **Visualize trends in both sensor reading with road conditions**
"""

df$Road_Condition <- as.factor(df$Road_Condition)

df %>% 
  ggplot(aes(x=Road_Condition, fill=Road_Condition)) +
  geom_bar()

df %>%
    gather( sensor, value, Acceleromete_X:Gyroscope_Z) %>%
    ggplot( aes(x = factor(Road_Condition), y = value)) + 
    geom_jitter(alpha = 0.1) + geom_boxplot(color = "blue", outlier.colour = NA, fill = NA) +
    facet_wrap(~sensor)

"""# After looking at the Boxplot we can clearly make comments on mean of different sensors
# Acceleromete X and Y have same mean on zero but Z axis means is high
# However Gyro X, Y and Z mean are same
"""

p1 <- ggplot(df, aes(x = Acceleromete_X, y = Acceleromete_Y, colour = factor(Road_Condition))) + 
      geom_point()
p2 <- ggplot(df, aes(x = Acceleromete_X, y = Acceleromete_Z, colour = factor(Road_Condition))) + 
      geom_point()
p3 <- ggplot(df, aes(x = Acceleromete_Z, y = Acceleromete_Y, colour = factor(Road_Condition))) + 
      geom_point()
p4 <- gather(df, sensor, value, Acceleromete_X:Acceleromete_Z) %>%
      ggplot(aes(x =value)) + geom_histogram(bins = 100) + 
      facet_grid(. ~ sensor, scales = "free_x")

plot_grid(p1, p2, p3,p4, align = "v", nrow = 4)

"""# By looking at the graph above and below we can claim that data is can be linearly modeled because of its spread,"""

p1 <- ggplot(df, aes(x = Acceleromete_X, y = Road_Condition, colour = factor(Road_Condition))) + 
      geom_point()
p2 <- ggplot(df, aes(x = Acceleromete_Y, y = Road_Condition, colour = factor(Road_Condition))) + 
      geom_point()
p3 <- ggplot(df, aes(x = Acceleromete_Z, y = Road_Condition, colour = factor(Road_Condition))) + 
      geom_point()


plot_grid(p1, p2, p3 , align = "v", nrow = 3)

p1 <- ggplot(df, aes(x = Gyroscope_X, y = Gyroscope_Z, colour = factor(Road_Condition))) + 
      geom_point()

p2 <- gather(df, sensor, value, Gyroscope_X:Gyroscope_Z) %>%
      ggplot(aes(x =value)) + geom_histogram(bins = 100) + 
      facet_grid(. ~ sensor, scales = "free_x")

grid.arrange(p1, p2)

df$Road_Condition <- as.numeric(df$Road_Condition)

"""# Corelations between Sensors and Road Condition"""

corrDftps <- cor(select(df, Acceleromete_X,Acceleromete_Y,Acceleromete_Z,Gyroscope_X,Gyroscope_Y,Gyroscope_Z,Road_Condition))
cex.before <- par("cex")
par(cex = 0.7)
corrplot(corrDftps, 
         insig = "blank", 
         method = "color",
                  
         addCoef.col="grey", 
         order = "alphabet", 
         tl.col="black", # colour of text label
         tl.cex = 1/par("cex"),
         cl.cex = 1/par("cex"), 
         addCoefasPercent = TRUE)

df$Road_Condition <- as.factor(df$Road_Condition)

"""# Applying Linear Model"""

Acc_fit <- lm(df$Road_Condition ~ df$Acceleromete_X + df$Acceleromete_Y + df$Acceleromete_Z)
summary(fit)
anova(Acc_fit)

fit <- lm(df$Road_Condition ~ df$Acceleromete_X + df$Acceleromete_Y + df$Acceleromete_Z+ df$Gyroscope_X + df$Gyroscope_Y + df$Gyroscope_Z)
summary(fit)
anova(fit)

"""# **Question 1 Conculsion**
After analysis the R2 value of both models with and with Gyro reading along with Acceleromete reading.

The R2 value with Gyro=0.002227

The R2 value without Gyro=0.001968

The R2 error is less in seconde case so, we can say that Accelerometer sensor when reading without with Gyro sensor data has a better
chance of detecting the road condition.

# **Question 2**
**Which accelerometer readings better explain the road conditions.**

In this question we have to check which Accelerometer sensor readings can produce good results for detecting road condtion.

# Analyse some trends in data
"""

df %>%
    gather( sensor, value, Acceleromete_X:Gyroscope_Z) %>%
    ggplot( aes(x = factor(Road_Condition), y = value)) + 
    geom_jitter(alpha = 0.1) + geom_boxplot(color = "blue", outlier.colour = NA, fill = NA) +
    facet_wrap(~sensor)

"""1. After looking at the Boxplot we can clearly make comments on mean of different sensors.

2. Acceleromete X and Y have same mean on zero but Z axis means is high.

3. However Gyro X, Y and Z mean are same.

To statistically proof that we can use Anova test

# Anova Test for Question 2

For Hypothesis **testing condition checking**

For this we’ll see following steps:

1. ANOVA assumes that the data is normally distributed. 
2. The ANOVA also assumes homogeneity of variance, which means that the variance among the groups should be approximately equal.
3. ANOVA also assumes that the observations are independent of each other.

By seeing box plot and describe function we can say that it meet the Anova assumptions so we can go for Anova test
"""

pop_mean=mean(df$Acceleromete_Z)

pop_mean

"""# **Stating hypothesis**
**Solution**

**Step 1:** Formulate Null and Alternative Hypothesis

Null hypothesis states that mean of all groups are same.Whereas alternate hypothesis states that atleast one group is different.

1. HO:μ1=μ2=μ3
2. HA: Not all population means are equal



**Step 2:** Set significance level and Sample data conditions check

1. alpha=0.05

We’ll use default value of Significance Level, As it is a one tailed test, so our alpha <- 0.05. Now perform a condition check. 

**Step 3:** Calculate Anova

**Step 4:** Draw Conculsion

Performing hypothesis test
"""

#**Step 3:** Calculate Anova
temp <- aov(Road_Condition ~ Acceleromete_X + Acceleromete_Y +Acceleromete_Z, data=df)
summary(temp)

"""# **Step 4 Anova Draw Conclusion**

As you can see from the three outputs of anova test above, the test statistic (F = in the first two (X,Y) ) and the p-value (p-value in the first the first two (X,Y)) are exactly the same for both Acceleromete_X and Acceleromete_Y sensors, which means that in case of equal variances, results and conclusions will be unchanged.
But in Acceleromete_Z F and P value is change so we can say that it do have different means and varaince



"""

pop_mean_z=mean(df$Acceleromete_Z)
pop_mean_y=mean(df$Acceleromete_Y)
pop_mean_x=mean(df$Acceleromete_X)

pop_mean_z

pop_mean_x

pop_mean_y

"""# **Question 2 Conclusion**
After all tha anaylsis we can say that the sensor reading of Acceleromete_X and Acceleromete_Y that best predicit the road condtions are the mean value which is in this case is zero and Acceleromete_Z's means value=9.66

1. Acceleromete_X=0.014 

2. Acceleromete_Y=-0.22

3. Acceleromete_Z=9.66

# **Question 3**
**Experimental data is showing mostly bad road conditions at high speed.**

In this question we have to check is there any reltionship between road condition and speed specificaly need to prove that either bad conditions can have any link with the driving fast.

# **Binning the Speed Variable**
From the summary we can see that minimum age is 0 and maximum is 119. We can divide this into three groups.



1.   0<= Speed <=40 - Slow
2.   40< Speed <=80 - Normal
3.   80< Speed <=120  - High
"""

# New column with the name agegroup will be created here 
df <- df %>% mutate(Speed = case_when(Speed >= 0  & Speed <= 40 ~ 'Slow', Speed > 40  & Speed <= 80 ~ 'Normal', Speed >80  & Speed <= 120 ~ 'High'))
head(df)

df %>%
  filter(Speed %in% c('High', 'Normal','Slow')) %>%
  ggplot(aes(x=Speed,fill=Speed)) + geom_bar()

"""# Now Both Speed and Road conditions are categorical we can apply Chi square test to verify the claim Experimental data is showing mostly bad road conditions at high speed.

# **Stating hypothesis**
**Solution**

**Step 1:** Formulate Null and Alternative Hypothesis

Ho=No relationship exists on the categorical variables in the population

Ha=There is a relationship exists on the categorical variables in the population

**Step 2:** Set significance level and Sample data conditions check

alpha=0.05
We’ll use default value of Significance Level, As it is a one tailed test, so our alpha <- 0.05. Now perform a condition check.

**Step 3:** Calculate chi-squared test

**Step 4:** Draw Conculsion

Performing hypothesis test
"""

# Step 3 Calculate chi-squared test
chisq.test(df$Speed, df$Road_Condition, correct=FALSE)

"""# **Question 3 Draw Conclusion**

We have a chi-squared value of  2.2e-16. Since we get a p-Value less than the significance level of 0.05, we reject the null hypothesis and conclude that the two variables are in fact dependent.

p-value being **Less than alpha we reject null hypothesis** and conclude with 95% confidence level that Experimental data is showing mostly bad road conditions at high speed.

# **Question 4**
Time of the recording is closely correlated with the road condition

# Anova Test for Question 4

For Hypothesis **testing condition checking**

For this we’ll see following steps:

1. ANOVA assumes that the data is normally distributed. 
2. The ANOVA also assumes homogeneity of variance, which means that the variance among the groups should be approximately equal.
3. ANOVA also assumes that the observations are independent of each other.

By seeing box plot and describe function we can say that it meet the Anova assumptions so we can go for Anova test

# **Stating hypothesis**
**Solution**

**Step 1:** Formulate Null and Alternative Hypothesis

Null hypothesis states that mean of all groups are same.Whereas alternate hypothesis states that atleast one group is different.

1. HO:μ1=μ2
2. HA: Not all population means are equal



**Step 2:** Set significance level and Sample data conditions check

1. alpha=0.05

We’ll use default value of Significance Level, As it is a one tailed test, so our alpha <- 0.05. Now perform a condition check. 

**Step 3:** Calculate Anova

**Step 4:** Draw Conculsion

Performing hypothesis test
"""

# Step 3 Anova Calculation
temp <- aov(df$Road_Condition ~ df$Timer)
summary(temp)

"""# **Step 4 Draw Conclusion**

We have a F value value of 2e-16. Since we get a p-Value less than the significance level of 0.05, we reject the null hypothesis and conclude that the two variable's mean are in fact different.

p-value being Less than alpha we reject null hypothesis and conclude with 95% confidence level that Time of the recording is **not** closely correlated with the road condition.

# **Question 5**
From all the given sensor values pick the best 5 that you think predict the road
condition the best?

Apply Linear model to all the sensor and selecting the best predictors for Linear model can be the best solution for this question

to get the best fit for a multiple regression model, it is important to include the most significant subset of predictors from the dataset. However, it can be quite challenging to understand which predictors, among a large set of predictors, have a significant influence on our target variable. This can be particularly cumbersome given that the p-value for each variable is adjusted for the other terms in the model.

Previously we have plot alot of visuals to understand the model can be get fit. here is few more samples
"""

p1 <- ggplot(df, aes(x = gravity_X, y = gravity_Y, colour = factor(Road_Condition))) + 
      geom_point()
p2 <- ggplot(df, aes(x = gravity_X, y = gravity_Z, colour = factor(Road_Condition))) + 
      geom_point()
p3 <- ggplot(df, aes(x = gravity_Z, y = gravity_Y, colour = factor(Road_Condition))) + 
      geom_point()
p4 <- gather(df, sensor, value, gravity_X:gravity_X) %>%
      ggplot(aes(x =value)) + geom_histogram(bins = 100) + 
      facet_grid(. ~ sensor, scales = "free_x")

plot_grid(p1, p2, p3,p4, align = "v", nrow = 4)

p1 <- ggplot(df, aes(x = Magnetic_X, y = Magnetic_Y, colour = factor(Road_Condition))) + 
      geom_point()
p2 <- ggplot(df, aes(x = Magnetic_X, y = Magnetic_Z, colour = factor(Road_Condition))) + 
      geom_point()
p3 <- ggplot(df, aes(x = Magnetic_Z, y = Magnetic_Y, colour = factor(Road_Condition))) + 
      geom_point()
p4 <- gather(df, sensor, value, Magnetic_X:Magnetic_Z) %>%
      ggplot(aes(x =value)) + geom_histogram(bins = 100) + 
      facet_grid(. ~ sensor, scales = "free_x")

plot_grid(p1, p2, p3,p4, align = "v", nrow = 4)

"""#Lets Fit the all models """

model1 <- lm(Road_Condition~Acceleromete_X,data=df)

model1 <- lm(Road_Condition~Acceleromete_X,data=df)
model2 <- lm(Road_Condition~Acceleromete_Y,data=df)
model3 <- lm(Road_Condition~Acceleromete_Z,data=df)

model4 <- lm(Road_Condition~Gyroscope_X,data=df) #
model5 <- lm(Road_Condition~Gyroscope_Y,data=df) #
model6 <- lm(Road_Condition~Gyroscope_Z,data=df)

model7 <- lm(Road_Condition~gravity_X,data=df)
model8 <- lm(Road_Condition~gravity_Y,data=df)#
model9 <- lm(Road_Condition~gravity_Z,data=df)

model10 <- lm(Road_Condition~Magnetic_X,data=df)
model11 <- lm(Road_Condition~Magnetic_Y,data=df)
model12 <- lm(Road_Condition~Magnetic_Z,data=df)

model13 <- lm(Road_Condition~Orientation_X,data=df)
model14 <- lm(Road_Condition~Orientation_Y,data=df)
model15 <- lm(Road_Condition~Orientation_Z,data=df)

model16 <- lm(Road_Condition~Rotational_1,data=df)
model17 <- lm(Road_Condition~Rotational_2,data=df)
model18 <- lm(Road_Condition~Rotational_3,data=df)
model19 <- lm(Road_Condition~Rotational_4,data=df)
model20 <- lm(Road_Condition~Rotational_5,data=df)
model21 <- lm(Road_Condition~Rotational_6,data=df)#
model22 <- lm(Road_Condition~Rotational_7,data=df)
model23 <- lm(Road_Condition~Rotational_8,data=df)# 
model24 <- lm(Road_Condition~Rotational_9,data=df)

summary(model1)

summary(model2)

summary(model3)

summary(model4)

summary(model5)

summary(model6)

summary(model7)

summary(model8)

summary(model9)

summary(model10)

summary(model11)

summary(model12)

summary(model13)

summary(model14)

summary(model15)

summary(model16)

summary(model17)

summary(model18)

summary(model19)

summary(model20)

summary(model21)

summary(model22)

summary(model23)

summary(model24)

"""# After Anaylzing all the feature I select this top 5 features that have minimum R2 error are here
1. **Gyroscope_Y**
2. **Gyroscope_Y**
3. **gravity_Y**
4. **Rotational_6**
5. **Rotational_8**
"""